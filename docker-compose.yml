version: '3.9'

services:
    postgres:
      image: postgres:13
      restart: always
      volumes:
        - pg_volume:/var/lib/postgresql/data/
      env_file:
        - .env
      environment:
        - POSTGRES_USER=${DB_USER}
        - POSTGRES_PASSWORD=${DB_PASSWORD}
        - POSTGRES_DB=${DB_NAME}
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U auth_user -d auth_db" ]
        interval: 10s
        timeout: 5s
        retries: 5

    redis:
      image: redis:7.0.11-alpine
      volumes:
        - redis_volume:/data
      healthcheck:
        test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
        interval: 1s
        timeout: 3s
        retries: 5
      depends_on:
        postgres:
          condition: service_healthy

    auth_api:
      build: .
      image: auth_api-image
      env_file:
        - .env
      healthcheck:
        test: ["CMD", "curl", "--fail", "http://localhost:8000/api/users"]
        interval: 15s
        timeout: 5s
        retries: 5
      depends_on:
        redis:
          condition: service_healthy
      expose:
        - 8000

    nginx:
      image: nginx:1.23.4-alpine
      volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf:ro
        - ./configs:/etc/nginx/conf.d:ro
      depends_on:
        auth_api:
          condition: service_healthy
      ports:
        - "80:80"

volumes:
    pg_volume:
      name: pg_volume_auth
    redis_volume:
      name: redis_volume_auth
