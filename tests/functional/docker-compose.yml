version: '3.9'

services:
    postgres:
      image: postgres:13
      restart: always
      volumes:
        - pg_volume:/var/lib/postgresql/data/
      env_file:
        - .env
      environment:
        - POSTGRES_USER=${DB_USER}
        - POSTGRES_PASSWORD=${DB_PASSWORD}
        - POSTGRES_DB=${DB_NAME}
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U auth_user -d auth_db" ]
        interval: 10s
        timeout: 5s
        retries: 5

    redis:
      image: redis:7.0.11-alpine
      volumes:
        - redis_volume:/data
      healthcheck:
        test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
        interval: 1s
        timeout: 3s
        retries: 5
      depends_on:
        postgres:
          condition: service_healthy

    auth_api:
      build: ../../.
      image: auth_api-image
      env_file:
        - ../../.env
      depends_on:
        redis:
          condition: service_healthy

    tests:
      image: auth_api-image
      working_dir: /app/tests/functional
      env_file:
        - .env
      entrypoint: >
        sh -c "pip install -r requirements.txt
        && pytest src"
      depends_on:
        - auth_api

volumes:
    redis_volume:
      name: auth_test_redis_volume
    pg_volume:
      name: auth_test_pg_volume
